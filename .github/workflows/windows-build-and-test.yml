# SPDX-FileCopyrightText: 2022 Nextcloud GmbH and contributors
# SPDX-License-Identifier: GPL-2.0-or-later

name: Windows Build and Package

on:
  push:
    branches:
      - master
      - '[0-9]+'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Windows Build and Package
    runs-on: windows-2022
    env:
      CRAFT_TARGET: windows-msvc2022_64-cl
      COBERTURA_COVERAGE_FILE: ${{ github.workspace }}\cobertura_coverage\coverage.xml
      CRAFT_MASTER_LOCATION: ${{ github.workspace }}\CraftMaster
      CRAFT_MASTER_CONFIG: ${{ github.workspace }}\craftmaster.ini

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install CraftMaster and Client Dependencies
        shell: pwsh
        run: |
          & cmd /C "git clone -q --depth=1 https://invent.kde.org/ggadinger/craftmaster.git ${{ env.CRAFT_MASTER_LOCATION }} 2>&1"
          
          function craft() {
              python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" --config "${{ env.CRAFT_MASTER_CONFIG }}" --target "${{ env.CRAFT_TARGET }}" -c $args
              if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }

          craft --add-blueprint-repository [git]https://github.com/nextcloud/desktop-client-blueprints.git
          craft craft
          craft --install-deps nextcloud-client

      - name: Cache Install OpenCppCoverage
        id: cache-install-opencppcoverage
        uses: actions/cache@v4
        with:
          path: C:\Program Files\OpenCppCoverage
          key: ${{ runner.os }}-cache-install-opencppcoverage

      - name: Install OpenCppCoverage
        if: steps.cache-install-opencppcoverage.outputs.cache-hit != 'true'
        shell: pwsh
        run: choco install opencppcoverage

      - name: Cache Install Inkscape
        id: cache-install-inkscape
        uses: actions/cache@v4
        with:
          path: C:\Program Files\inkscape
          key: ${{ runner.os }}-cache-install-inkscape

      - name: Install Inkscape
        if: steps.cache-install-inkscape.outputs.cache-hit != 'true'
        shell: pwsh
        run: choco install inkscape

      - name: Setup PATH
        shell: pwsh
        run: |
          echo "C:\Program Files\OpenCppCoverage" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "${{ github.workspace }}\${{ env.CRAFT_TARGET }}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Compile Nextcloud Client
        shell: pwsh
        run: |
          function craft() {
              python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" --config "${{ env.CRAFT_MASTER_CONFIG }}" --target "${{ env.CRAFT_TARGET }}" -c $args
              if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }

          craft --src-dir "${{ github.workspace }}" nextcloud-client

      - name: Package Nextcloud Client
        shell: pwsh
        run: |
          python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" `
            --config "${{ env.CRAFT_MASTER_CONFIG }}" `
            --target "${{ env.CRAFT_TARGET }}" `
            -c --no-cache --package nextcloud-client

      - name: Prepare Artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "${{ github.workspace }}\binaries"

          Copy-Item "$env:USERPROFILE\craft\binaries\*" "${{ github.workspace }}\binaries\" -Recurse -Force -ErrorAction SilentlyContinue

          python "${{ env.CRAFT_MASTER_LOCATION }}\CraftMaster.py" `
            --config "${{ env.CRAFT_MASTER_CONFIG }}" `
            --target "${{ env.CRAFT_TARGET }}" `
            -c --shelve "${{ github.workspace }}\.craft.shelf"

          Copy-Item "${{ github.workspace }}\.craft.shelf" "${{ github.workspace }}\binaries\"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextcloud-windows-build
          path: ${{ github.workspace }}\binaries\*
